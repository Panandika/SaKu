// Generated by view binder compiler. Do not edit!
package com.example.saku20.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.saku20.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnDelteTransaction;

  @NonNull
  public final Button btnUpdateTransaction;

  @NonNull
  public final RelativeLayout customToolbarAddTransaction;

  @NonNull
  public final CheckBox expenseCheckBox;

  @NonNull
  public final CheckBox incomeCheckBox;

  @NonNull
  public final EditText userAmountAdd;

  @NonNull
  public final EditText userNoteAdd;

  private ActivityUpdateBinding(@NonNull LinearLayout rootView, @NonNull Button btnDelteTransaction,
      @NonNull Button btnUpdateTransaction, @NonNull RelativeLayout customToolbarAddTransaction,
      @NonNull CheckBox expenseCheckBox, @NonNull CheckBox incomeCheckBox,
      @NonNull EditText userAmountAdd, @NonNull EditText userNoteAdd) {
    this.rootView = rootView;
    this.btnDelteTransaction = btnDelteTransaction;
    this.btnUpdateTransaction = btnUpdateTransaction;
    this.customToolbarAddTransaction = customToolbarAddTransaction;
    this.expenseCheckBox = expenseCheckBox;
    this.incomeCheckBox = incomeCheckBox;
    this.userAmountAdd = userAmountAdd;
    this.userNoteAdd = userNoteAdd;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_delte_transaction;
      Button btnDelteTransaction = ViewBindings.findChildViewById(rootView, id);
      if (btnDelteTransaction == null) {
        break missingId;
      }

      id = R.id.btn_update_transaction;
      Button btnUpdateTransaction = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdateTransaction == null) {
        break missingId;
      }

      id = R.id.custom_toolbar_add_transaction;
      RelativeLayout customToolbarAddTransaction = ViewBindings.findChildViewById(rootView, id);
      if (customToolbarAddTransaction == null) {
        break missingId;
      }

      id = R.id.expense_check_box;
      CheckBox expenseCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (expenseCheckBox == null) {
        break missingId;
      }

      id = R.id.income_check_box;
      CheckBox incomeCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (incomeCheckBox == null) {
        break missingId;
      }

      id = R.id.user_amount_add;
      EditText userAmountAdd = ViewBindings.findChildViewById(rootView, id);
      if (userAmountAdd == null) {
        break missingId;
      }

      id = R.id.user_note_add;
      EditText userNoteAdd = ViewBindings.findChildViewById(rootView, id);
      if (userNoteAdd == null) {
        break missingId;
      }

      return new ActivityUpdateBinding((LinearLayout) rootView, btnDelteTransaction,
          btnUpdateTransaction, customToolbarAddTransaction, expenseCheckBox, incomeCheckBox,
          userAmountAdd, userNoteAdd);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
